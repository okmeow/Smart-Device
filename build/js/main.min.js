/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_ios_vh_fix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/ios-vh-fix */ "./js/utils/ios-vh-fix.js");
/* harmony import */ var _modules_modals_init_modals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/modals/init-modals */ "./js/modules/modals/init-modals.js");
/* harmony import */ var _modules_modal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/modal.js */ "./js/modules/modal.js");
/* harmony import */ var _modules_footer_menu_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/footer-menu.js */ "./js/modules/footer-menu.js");
/* harmony import */ var _modules_tel_mask_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/tel-mask.js */ "./js/modules/tel-mask.js");
/* harmony import */ var _modules_breakpoint_checker_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/breakpoint-checker.js */ "./js/modules/breakpoint-checker.js");
/* harmony import */ var _modules_feedback_form_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/feedback-form.js */ "./js/modules/feedback-form.js");







window.addEventListener('DOMContentLoaded', function () {
  Object(_utils_ios_vh_fix__WEBPACK_IMPORTED_MODULE_0__["iosVhFix"])();
  Object(_modules_breakpoint_checker_js__WEBPACK_IMPORTED_MODULE_5__["breakpointChecker"])();
  Object(_modules_tel_mask_js__WEBPACK_IMPORTED_MODULE_4__["telMask"])();
  Object(_modules_footer_menu_js__WEBPACK_IMPORTED_MODULE_3__["mobileFooterNavClickHandler"])();
  Object(_modules_footer_menu_js__WEBPACK_IMPORTED_MODULE_3__["mobileFooterContactsClickHandler"])();
  Object(_modules_feedback_form_js__WEBPACK_IMPORTED_MODULE_6__["feedbackFormHandlers"])();
  Object(_modules_modal_js__WEBPACK_IMPORTED_MODULE_2__["modalFormHandler"])();
  Object(_modules_modal_js__WEBPACK_IMPORTED_MODULE_2__["modalFormFocusHandlers"])();
  window.addEventListener('load', function () {
    Object(_modules_modals_init_modals__WEBPACK_IMPORTED_MODULE_1__["initModals"])();
  });
});

// ---------------------------------

// ❗❗❗ обязательно установите плагины eslint, stylelint, editorconfig в редактор кода.

// привязывайте js не на классы, а на дата атрибуты (data-validate)

// вместо модификаторов .block--active используем утилитарные классы
// .is-active || .is-open || .is-invalid и прочие (обязателен нейминг в два слова)
// .select.select--opened ❌ ---> [data-select].is-open ✅

// выносим все в дата атрибуты
// url до иконок пинов карты, настройки автопрокрутки слайдера, url к json и т.д.

// для адаптивного JS используется matchMedia и addListener
// const breakpoint = window.matchMedia(`(min-width:1024px)`);
// const breakpointChecker = () => {
//   if (breakpoint.matches) {
//   } else {
//   }
// };
// breakpoint.addListener(breakpointChecker);
// breakpointChecker();

// используйте .closest(el)

/***/ }),

/***/ "./js/modules/breakpoint-checker.js":
/*!******************************************!*\
  !*** ./js/modules/breakpoint-checker.js ***!
  \******************************************/
/*! exports provided: breakpointChecker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "breakpointChecker", function() { return breakpointChecker; });
var footerNavTitle = document.querySelector('[data-footer-navigation-title="footer-navigation-title"]');
var footerContactsTitle = document.querySelector('[data-footer-contacts-title="footer-contacts-title"]');
var welcomeButton = document.querySelector('[data-welcome-button="welcome-button"]');
var catalogTitle = document.querySelector('[data-catalog-title="catalog-title"]');
var breakpoint = window.matchMedia("(max-width:767px)");
var breakpointChecker = function breakpointChecker() {
  if (breakpoint.matches) {
    footerNavTitle.tabIndex = "0";
    footerContactsTitle.tabIndex = "0";
    welcomeButton.textContent = "Консультация";
    catalogTitle.textContent = "Товары и услуги Uger";
  } else {
    footerNavTitle.tabIndex = "-1";
    footerContactsTitle.tabIndex = "-1";
    welcomeButton.textContent = "Получить консультацию";
    catalogTitle.textContent = "Uger предлагает следующие товары и услуги";
  }
};
breakpoint.addListener(breakpointChecker);
breakpointChecker();


/***/ }),

/***/ "./js/modules/feedback-form.js":
/*!*************************************!*\
  !*** ./js/modules/feedback-form.js ***!
  \*************************************/
/*! exports provided: feedbackFormHandlers */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "feedbackFormHandlers", function() { return feedbackFormHandlers; });
// Блок кода для изменений порядка фокуса на форме (Удалить, если нужен нормальный порядок фокуса)

var feedbackButton = document.querySelector('[data-feedback-button="feedback-button"]');
var feedbackCheckbox = document.querySelector('[data-feedback-checkbox="feedback-checkbox"]');
var feedbackTextarea = document.querySelector('[data-feedback-textarea="feedback-textarea"]');
var feedbackInputPhone = document.querySelector('[data-input-feedback-phone="input-phone"]');
var footerLogo = document.querySelector('[data-footer-logo="footer-logo"]');
var isTabKey = function isTabKey(evt) {
  return evt.key === 'Tab';
};
var feedbackFormHandlers = function feedbackFormHandlers() {
  feedbackTextarea.addEventListener('keydown', function (evt) {
    if (isTabKey(evt)) {
      evt.preventDefault();
      feedbackCheckbox.focus();
    }
    ;
    if (evt.shiftKey && isTabKey(evt)) {
      evt.preventDefault();
      feedbackInputPhone.focus();
    }
  });
  feedbackCheckbox.addEventListener('keydown', function (evt) {
    if (isTabKey(evt)) {
      evt.preventDefault();
      feedbackButton.focus();
    }
    ;
    if (evt.shiftKey && isTabKey(evt)) {
      evt.preventDefault();
      feedbackTextarea.focus();
    }
  });
  feedbackButton.addEventListener('keydown', function (evt) {
    if (isTabKey(evt)) {
      evt.preventDefault();
      footerLogo.focus();
    }
    ;
    if (evt.shiftKey && isTabKey(evt)) {
      evt.preventDefault();
      feedbackCheckbox.focus();
    }
  });
  footerLogo.addEventListener('keydown', function (evt) {
    if (evt.shiftKey && isTabKey(evt)) {
      evt.preventDefault();
      feedbackButton.focus();
    }
  });
};

// Конец блока для изменения порядка фокуса

/***/ }),

/***/ "./js/modules/footer-menu.js":
/*!***********************************!*\
  !*** ./js/modules/footer-menu.js ***!
  \***********************************/
/*! exports provided: mobileFooterNavClickHandler, mobileFooterContactsClickHandler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mobileFooterNavClickHandler", function() { return mobileFooterNavClickHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mobileFooterContactsClickHandler", function() { return mobileFooterContactsClickHandler; });
var footerNavLists = document.querySelectorAll('[data-footer-navigation-list="footer-navigation-list"]');
var footerNavTitle = document.querySelector('[data-footer-navigation-title="footer-navigation-title"]');
var footerContacts = document.querySelector('[data-footer-contacts-wrapper="footer-contacts-wrapper"]');
var footerContactsTitle = document.querySelector('[data-footer-contacts-title="footer-contacts-title"]');

// footer navigation

footerNavTitle.classList.remove('footer-navigation__title--nojs');
footerNavLists.forEach(function (item) {
  return item.classList.remove('footer-navigation__list--nojs');
});
footerNavLists.forEach(function (item) {
  return item.classList.remove('footer-navigation__list--opened');
});
var isEnterKey = function isEnterKey(evt) {
  return evt.key === 'Enter';
};
var onFooterNavTitleEnterKeydown = function onFooterNavTitleEnterKeydown(evt) {
  if (isEnterKey(evt)) {
    evt.preventDefault();
    if (footerNavTitle.classList.contains('footer-navigation__title--opened')) {
      return closeFooterNav();
    }
    return openFooterNav();
  }
};
footerNavTitle.addEventListener('keydown', onFooterNavTitleEnterKeydown);
var openFooterNav = function openFooterNav() {
  if (footerContacts.classList.contains('footer-contacts__wrapper--opened')) {
    closeFooterContacts();
  }
  footerNavTitle.classList.add('footer-navigation__title--opened');
  footerNavTitle.classList.remove('footer-navigation__title--closed');
  footerNavLists.forEach(function (item) {
    return item.classList.add('footer-navigation__list--opened');
  });
};
var closeFooterNav = function closeFooterNav() {
  footerNavLists.forEach(function (item) {
    return item.classList.remove('footer-navigation__list--opened');
  });
  footerNavTitle.classList.remove('footer-navigation__title--opened');
  footerNavTitle.classList.add('footer-navigation__title--closed');
};
var toggleFooterNav = function toggleFooterNav() {
  if (footerNavLists[0].classList.contains('footer-navigation__list--opened')) {
    return closeFooterNav();
  }
  return openFooterNav();
};
var mobileFooterNavClickHandler = function mobileFooterNavClickHandler() {
  return footerNavTitle.addEventListener('click', toggleFooterNav);
};

//footer contacts

footerContactsTitle.classList.remove('footer-contacts__title--nojs');
footerContacts.classList.remove('footer-contacts__wrapper--nojs');
footerContacts.classList.remove('footer-contacts__wrapper--opened');
var onFooterContactsTitleEnterKeydown = function onFooterContactsTitleEnterKeydown(evt) {
  if (isEnterKey(evt)) {
    evt.preventDefault();
    if (footerContactsTitle.classList.contains('footer-contacts__title--opened')) {
      return closeFooterContacts();
    }
    return openFooterContacts();
  }
};
footerContactsTitle.addEventListener('keydown', onFooterContactsTitleEnterKeydown);
var openFooterContacts = function openFooterContacts() {
  if (footerNavLists[0].classList.contains('footer-navigation__list--opened')) {
    closeFooterNav();
  }
  footerContactsTitle.classList.add('footer-contacts__title--opened');
  footerContactsTitle.classList.remove('footer-contacts__title--closed');
  footerContacts.classList.add('footer-contacts__wrapper--opened');
};
function closeFooterContacts() {
  footerContactsTitle.classList.remove('footer-contacts__title--opened');
  footerContactsTitle.classList.add('footer-contacts__title--closed');
  footerContacts.classList.remove('footer-contacts__wrapper--opened');
}
;
var toggleFooterContacts = function toggleFooterContacts() {
  if (footerContacts.classList.contains('footer-contacts__wrapper--opened')) {
    return closeFooterContacts();
  }
  return openFooterContacts();
};
var mobileFooterContactsClickHandler = function mobileFooterContactsClickHandler() {
  return footerContactsTitle.addEventListener('click', toggleFooterContacts);
};


/***/ }),

/***/ "./js/modules/modal.js":
/*!*****************************!*\
  !*** ./js/modules/modal.js ***!
  \*****************************/
/*! exports provided: modalFormHandler, modalFormFocusHandlers */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modalFormHandler", function() { return modalFormHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modalFormFocusHandlers", function() { return modalFormFocusHandlers; });
var callMeButton = document.querySelector('[data-header-call-me-button="header-call-me-button"]');
var closeModalFormButton = document.querySelector('[data-modal-close-button="modal-close-button"]');
var modalForm = document.querySelector('[data-modal="modal"]');
var modalFormInputs = document.querySelectorAll('[data-modal-input="modal-input"]');
var header = document.querySelector('[data-header="header"]');
var mainContainer = document.querySelector('[data-main-container="main-container"]');
var footer = document.querySelector('[data-footer="footer"]');
var body = document.querySelector('[data-body="body"]');

// Блок кода для изменений порядка фокуса на форме (Удалить, если нужен нормальный порядок фокуса)

var modalButton = document.querySelector('[data-modal-button="modal-button"]');
var modalCheckbox = document.querySelector('[data-modal-checkbox="modal-checkbox"]');
var modalTextarea = document.querySelector('[data-modal-textarea="modal-textarea"]');
var modalInputPhone = document.querySelector('[data-input-modal-phone="input-phone"]');
var isTabKey = function isTabKey(evt) {
  return evt.key === 'Tab';
};
var modalFormFocusHandlers = function modalFormFocusHandlers() {
  modalTextarea.addEventListener('keydown', function (evt) {
    if (isTabKey(evt)) {
      evt.preventDefault();
      modalCheckbox.focus();
    }
    ;
    if (evt.shiftKey && isTabKey(evt)) {
      evt.preventDefault();
      modalInputPhone.focus();
    }
  });
  modalCheckbox.addEventListener('keydown', function (evt) {
    if (isTabKey(evt)) {
      evt.preventDefault();
      modalButton.focus();
    }
    ;
    if (evt.shiftKey && isTabKey(evt)) {
      evt.preventDefault();
      modalTextarea.focus();
    }
  });
  modalButton.addEventListener('keydown', function (evt) {
    if (isTabKey(evt)) {
      evt.preventDefault();
      closeModalFormButton.focus();
    }
    ;
    if (evt.shiftKey && isTabKey(evt)) {
      evt.preventDefault();
      modalCheckbox.focus();
    }
  });
  closeModalFormButton.addEventListener('keydown', function (evt) {
    if (evt.shiftKey && isTabKey(evt)) {
      evt.preventDefault();
      modalButton.focus();
    }
  });
};

// Конец блока для изменения порядка фокуса

var closeModalForm = function closeModalForm() {
  modalForm.classList.add('modal--close');
  document.removeEventListener('keydown', onModalFormEscKeydown);
  document.removeEventListener('mouseup', clickOutsideModalForm);
  body.style.overflow = 'scroll';
  header.removeAttribute('inert');
  mainContainer.removeAttribute('inert');
  footer.removeAttribute('inert');
};
var openModalForm = function openModalForm() {
  modalForm.classList.remove('modal--close');
  document.addEventListener('keydown', onModalFormEscKeydown);
  closeModalFormButton.addEventListener('click', closeModalForm);
  document.addEventListener('mouseup', clickOutsideModalForm);
  modalFormInputs[0].focus();
  body.style.overflow = 'hidden';
  header.inert = "true";
  mainContainer.inert = "true";
  footer.inert = "true";
};
var isEscapeKey = function isEscapeKey(evt) {
  return evt.key === 'Escape';
};
function onModalFormEscKeydown(evt) {
  if (isEscapeKey(evt)) {
    evt.preventDefault();
    closeModalForm();
  }
}
;
function clickOutsideModalForm(evt) {
  if (evt.target.classList.contains('modal')) {
    return closeModalForm();
  }
  ;
  return evt;
}
;
var modalFormHandler = function modalFormHandler() {
  callMeButton.href = "#";
  callMeButton.addEventListener('click', openModalForm);
};


/***/ }),

/***/ "./js/modules/modals/init-modals.js":
/*!******************************************!*\
  !*** ./js/modules/modals/init-modals.js ***!
  \******************************************/
/*! exports provided: modals, initModals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modals", function() { return modals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initModals", function() { return initModals; });
/* harmony import */ var _modals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modals */ "./js/modules/modals/modals.js");

var modals;

// Здесь реализован пример открытия модалки через колбэк закрытия
// const openModalInCloseCallback = (name, context = this) => {
//   context._enableScrolling = false;
//   context._setSettings('default');
//   modals.open(name);
// };

// closeCallback() {
//   openModalInCloseCallback('modal-5');
// },

var settings = {
  'default': {
    preventDefault: true,
    stopPlay: true,
    lockFocus: true,
    startFocus: true,
    focusBack: true,
    eventTimeout: 400,
    openCallback: false,
    closeCallback: false
  }
};
var initModals = function initModals() {
  var modalElements = document.querySelectorAll('.modal');
  modalElements.forEach(function (el) {
    setTimeout(function () {
      el.classList.remove('modal--preload');
    }, 100);
  });
  modals = new _modals__WEBPACK_IMPORTED_MODULE_0__["Modals"](settings);
  // Используйте в разработке экспортируемую переменную modals, window сделан для бэкэнда
  window.modals = modals;
};


/***/ }),

/***/ "./js/modules/modals/modals.js":
/*!*************************************!*\
  !*** ./js/modules/modals/modals.js ***!
  \*************************************/
/*! exports provided: Modals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Modals", function() { return Modals; });
/* harmony import */ var _utils_scroll_lock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/scroll-lock */ "./js/utils/scroll-lock.js");
/* harmony import */ var _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/focus-lock */ "./js/utils/focus-lock.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }


var Modals = /*#__PURE__*/function () {
  function Modals() {
    var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    _classCallCheck(this, Modals);
    this._scrollLock = new _utils_scroll_lock__WEBPACK_IMPORTED_MODULE_0__["ScrollLock"]();
    this._focusLock = new _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__["FocusLock"]();
    this._modalOpenElements = document.querySelectorAll('[data-open-modal]');
    this._openedModalElement = null;
    this._modalName = null;
    this._enableScrolling = true;
    this._settingKey = 'default';
    this._settings = settings;
    this._preventDefault = this._settings[this._settingKey].preventDefault;
    this._stopPlay = this._settings[this._settingKey].stopPlay;
    this._lockFocus = this._settings[this._settingKey].lockFocus;
    this._startFocus = this._settings[this._settingKey].startFocus;
    this._focusBack = this._settings[this._settingKey].focusBack;
    this._eventTimeout = this._settings[this._settingKey].eventTimeout;
    this._openCallback = this._settings[this._settingKey].openCallback;
    this._closeCallback = this._settings[this._settingKey].closeCallback;
    this._documentKeydownHandler = this._documentKeydownHandler.bind(this);
    this._documentClickHandler = this._documentClickHandler.bind(this);
    this._modalClickHandler = this._modalClickHandler.bind(this);
    this._init();
  }
  _createClass(Modals, [{
    key: "_init",
    value: function _init() {
      if (this._modalOpenElements.length) {
        document.addEventListener('click', this._documentClickHandler);
      }
    }
  }, {
    key: "_setSettings",
    value: function _setSettings() {
      var settingKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._settingKey;
      if (!this._settings[settingKey]) {
        return;
      }
      this._preventDefault = typeof this._settings[settingKey].preventDefault === 'boolean' ? this._settings[settingKey].preventDefault : this._settings[this._settingKey].preventDefault;
      this._stopPlay = typeof this._settings[settingKey].stopPlay === 'boolean' ? this._settings[settingKey].stopPlay : this._settings[this._settingKey].stopPlay;
      this._lockFocus = typeof this._settings[settingKey].lockFocus === 'boolean' ? this._settings[settingKey].lockFocus : this._settings[this._settingKey].lockFocus;
      this._startFocus = typeof this._settings[settingKey].startFocus === 'boolean' ? this._settings[settingKey].startFocus : this._settings[this._settingKey].startFocus;
      this._focusBack = typeof this._settings[settingKey].lockFocus === 'boolean' ? this._settings[settingKey].focusBack : this._settings[this._settingKey].focusBack;
      this._eventTimeout = typeof this._settings[settingKey].eventTimeout === 'number' ? this._settings[settingKey].eventTimeout : this._settings[this._settingKey].eventTimeout;
      this._openCallback = this._settings[settingKey].openCallback || this._settings[this._settingKey].openCallback;
      this._closeCallback = this._settings[settingKey].closeCallback || this._settings[this._settingKey].closeCallback;
    }
  }, {
    key: "_documentClickHandler",
    value: function _documentClickHandler(evt) {
      var target = evt.target;
      if (!target.closest('[data-open-modal]')) {
        return;
      }
      evt.preventDefault();
      this._modalName = target.closest('[data-open-modal]').dataset.openModal;
      if (!this._modalName) {
        return;
      }
      this.open();
    }
  }, {
    key: "_documentKeydownHandler",
    value: function _documentKeydownHandler(evt) {
      var isEscKey = evt.key === 'Escape' || evt.key === 'Esc';
      if (isEscKey) {
        evt.preventDefault();
        this.close(document.querySelector('.modal.is-active').dataset.modal);
      }
    }
  }, {
    key: "_modalClickHandler",
    value: function _modalClickHandler(evt) {
      var target = evt.target;
      if (!target.closest('[data-close-modal]')) {
        return;
      }
      this.close(target.closest('[data-modal]').dataset.modal);
    }
  }, {
    key: "_addListeners",
    value: function _addListeners(modal) {
      modal.addEventListener('click', this._modalClickHandler);
      document.addEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "_removeListeners",
    value: function _removeListeners(modal) {
      modal.removeEventListener('click', this._modalClickHandler);
      document.removeEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "_stopInteractive",
    value: function _stopInteractive(modal) {
      if (this._stopPlay) {
        modal.querySelectorAll('video, audio').forEach(function (el) {
          return el.pause();
        });
        modal.querySelectorAll('[data-iframe]').forEach(function (el) {
          el.querySelector('iframe').contentWindow.postMessage('{"event": "command", "func": "pauseVideo", "args": ""}', '*');
        });
      }
    }
  }, {
    key: "_autoPlay",
    value: function _autoPlay(modal) {
      modal.querySelectorAll('[data-iframe]').forEach(function (el) {
        var autoPlay = el.closest('[data-auto-play]');
        if (autoPlay) {
          el.querySelector('iframe').contentWindow.postMessage('{"event":"command","func":"playVideo","args":""}', '*');
        }
      });
    }
  }, {
    key: "open",
    value: function open() {
      var _this = this;
      var modalName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._modalName;
      var modal = document.querySelector("[data-modal=\"".concat(modalName, "\"]"));
      if (!modal || modal.classList.contains('is-active')) {
        return;
      }
      document.removeEventListener('click', this._documentClickHandler);
      this._openedModalElement = document.querySelector('.modal.is-active');
      if (this._openedModalElement) {
        this._enableScrolling = false;
        this.close(this._openedModalElement.dataset.modal);
      }
      this._setSettings(modalName);
      modal.classList.add('is-active');
      if (!this._openedModalElement) {
        this._scrollLock.disableScrolling();
      }
      if (this._openCallback) {
        this._openCallback();
      }
      if (this._lockFocus) {
        this._focusLock.lock('.modal.is-active', this._startFocus);
      }
      setTimeout(function () {
        _this._addListeners(modal);
        _this._autoPlay(modal);
        document.addEventListener('click', _this._documentClickHandler);
      }, this._eventTimeout);
    }
  }, {
    key: "close",
    value: function close() {
      var _this2 = this;
      var modalName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._modalName;
      var modal = document.querySelector("[data-modal=\"".concat(modalName, "\"]"));
      document.removeEventListener('click', this._documentClickHandler);
      if (!modal || !modal.classList.contains('is-active')) {
        return;
      }
      if (this._lockFocus) {
        this._focusLock.unlock(this._focusBack);
      }
      modal.classList.remove('is-active');
      this._removeListeners(modal);
      this._stopInteractive(modal);
      if (this._closeCallback) {
        this._closeCallback();
      }
      if (this._enableScrolling) {
        setTimeout(function () {
          _this2._scrollLock.enableScrolling();
        }, this._eventTimeout);
      }
      setTimeout(function () {
        document.addEventListener('click', _this2._documentClickHandler);
      }, this._eventTimeout);
      this._setSettings('default');
      this._enableScrolling = true;
    }
  }]);
  return Modals;
}();

/***/ }),

/***/ "./js/modules/tel-mask.js":
/*!********************************!*\
  !*** ./js/modules/tel-mask.js ***!
  \********************************/
/*! exports provided: telMask */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "telMask", function() { return telMask; });
// Источник https://web-revenue.ru/verstka/maska-vvoda-telefona-v-input-na-js
// Внесены изменения под ТЗ
var inputPhoneFeedbackForm = document.querySelector('[data-input-feedback-phone="input-phone"]');
var feedbackForm = document.querySelector('[data-feedback-form="feedback-form"]');
var inputPhoneModalForm = document.querySelector('[data-input-modal-phone="input-phone"]');
var modalForm = document.querySelector('[data-modal-form="modal-form"]');
var MIN_PHONE_LENGTH = 18;
feedbackForm.addEventListener('submit', function (evt) {
  if (inputPhoneFeedbackForm.value.length < MIN_PHONE_LENGTH) {
    evt.preventDefault();
    inputPhoneFeedbackForm.focus();
  }
});
modalForm.addEventListener('submit', function (evt) {
  if (inputPhoneModalForm.value.length < MIN_PHONE_LENGTH) {
    evt.preventDefault();
    inputPhoneModalForm.focus();
  }
});
function telMask() {
  [].forEach.call(document.querySelectorAll('[data-input-phone="input-phone"]'), function (input) {
    var keyCode;
    function mask(event) {
      event.keyCode && (keyCode = event.keyCode);
      var pos = this.selectionStart;
      if (pos < 3) event.preventDefault();
      var matrix = "+7 (___) ___-__-__",
        i = 0,
        def = matrix.replace(/\D/g, ""),
        val = this.value.replace(/\D/g, ""),
        new_value = matrix.replace(/[_\d]/g, function (a) {
          return i < val.length ? val.charAt(i++) || def.charAt(i) : a;
        });
      i = new_value.indexOf("_");
      if (i != -1) {
        i < 5 && (i = 4);
        new_value = new_value.slice(0, i);
      }
      var reg = matrix.substr(0, this.value.length).replace(/_+/g, function (a) {
        return "\\d{1," + a.length + "}";
      }).replace(/[+()]/g, "\\$&");
      reg = new RegExp("^" + reg + "$");
      if (!reg.test(this.value) || this.value.length < 5 || keyCode > 47 && keyCode < 58) this.value = new_value;
      if (event.type == "blur" && this.value.length < 5) this.value = "";
    }
    input.addEventListener("input", mask, false);
    input.addEventListener("focus", mask, false);
    input.addEventListener("blur", mask, false);
    input.addEventListener("keydown", mask, false);
    input.addEventListener('click', function () {
      if (input.value.length < 5) {
        input.selectionStart = input.value.length;
      }
      if (input.selectionStart < 5) {
        input.selectionStart = 5;
      }
    });
  });
}
;


/***/ }),

/***/ "./js/utils/focus-lock.js":
/*!********************************!*\
  !*** ./js/utils/focus-lock.js ***!
  \********************************/
/*! exports provided: FocusLock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FocusLock", function() { return FocusLock; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
var SELECTORS = ['a[href]', 'area[href]', 'input:not([disabled]):not([type="hidden"]):not([aria-hidden])', 'select:not([disabled]):not([aria-hidden])', 'textarea:not([disabled]):not([aria-hidden])', 'button:not([disabled]):not([aria-hidden])', 'iframe', 'object', 'embed', '[contenteditable]', '[tabindex]:not([tabindex^="-"])'];
var FocusLock = /*#__PURE__*/function () {
  function FocusLock() {
    _classCallCheck(this, FocusLock);
    this._lockedSelector = null;
    this._focusableElements = null;
    this._endElement = null;
    this._selectors = SELECTORS;
    this._documentKeydownHandler = this._documentKeydownHandler.bind(this);
  }
  _createClass(FocusLock, [{
    key: "_documentKeydownHandler",
    value: function _documentKeydownHandler(evt) {
      var activeElement = document.activeElement;
      if (evt.key === 'Tab') {
        if (!this._focusableElements.length) {
          evt.preventDefault();
          activeElement.blur();
          return;
        }
        if (this._focusableElements.length === 1) {
          evt.preventDefault();
          this._focusableElements[0].focus();
          return;
        }
        if (this._focusableElements.length > 1 && !activeElement.closest(this._lockedSelector)) {
          evt.preventDefault();
          this._focusableElements[0].focus();
          return;
        }
      }
      if (evt.key === 'Tab' && !evt.shiftKey && activeElement === this._focusableElements[this._focusableElements.length - 1]) {
        evt.preventDefault();
        this._focusableElements[0].focus();
      }
      if (evt.key === 'Tab' && evt.shiftKey && activeElement === this._focusableElements[0]) {
        evt.preventDefault();
        this._focusableElements[this._focusableElements.length - 1].focus();
      }
    }
  }, {
    key: "lock",
    value: function lock(lockedSelector) {
      var startFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      this.unlock();
      this._lockedSelector = lockedSelector;
      var lockedElement = document.querySelector(this._lockedSelector);
      if (!lockedElement) {
        return;
      }
      this._focusableElements = lockedElement.querySelectorAll(this._selectors);
      this._endElement = document.activeElement;
      var startElement = lockedElement.querySelector('[data-focus]') || this._focusableElements[0];
      if (this._endElement) {
        this._endElement.blur();
      }
      if (startElement && startFocus) {
        startElement.focus();
      }
      document.addEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "unlock",
    value: function unlock() {
      var returnFocus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      if (this._endElement && returnFocus) {
        this._endElement.focus();
      }
      this._lockedSelector = null;
      this._focusableElements = null;
      this._endElement = null;
      document.removeEventListener('keydown', this._documentKeydownHandler);
    }
  }]);
  return FocusLock;
}();
window.focusLock = new FocusLock();

/***/ }),

/***/ "./js/utils/ios-checker.js":
/*!*********************************!*\
  !*** ./js/utils/ios-checker.js ***!
  \*********************************/
/*! exports provided: iosChecker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iosChecker", function() { return iosChecker; });
var iosChecker = function iosChecker() {
  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform)
  // iPad on iOS 13 detection
  || navigator.userAgent.includes('Mac') && 'ontouchend' in document;
};

/***/ }),

/***/ "./js/utils/ios-vh-fix.js":
/*!********************************!*\
  !*** ./js/utils/ios-vh-fix.js ***!
  \********************************/
/*! exports provided: iosVhFix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iosVhFix", function() { return iosVhFix; });
/* harmony import */ var _ios_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ios-checker */ "./js/utils/ios-checker.js");

var iosVhFix = function iosVhFix() {
  if (!(!!window.MSInputMethodContext && !!document.documentMode)) {
    if (Object(_ios_checker__WEBPACK_IMPORTED_MODULE_0__["iosChecker"])()) {
      var vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      window.addEventListener('resize', function () {
        vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      });
    }
  }
};


/***/ }),

/***/ "./js/utils/scroll-lock.js":
/*!*********************************!*\
  !*** ./js/utils/scroll-lock.js ***!
  \*********************************/
/*! exports provided: ScrollLock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScrollLock", function() { return ScrollLock; });
/* harmony import */ var _ios_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ios-checker */ "./js/utils/ios-checker.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var ScrollLock = /*#__PURE__*/function () {
  function ScrollLock() {
    _classCallCheck(this, ScrollLock);
    this._iosChecker = _ios_checker__WEBPACK_IMPORTED_MODULE_0__["iosChecker"];
    this._lockClass = this._iosChecker() ? 'scroll-lock-ios' : 'scroll-lock';
    this._scrollTop = null;
    this._fixedBlockElements = document.querySelectorAll('[data-fix-block]');
  }
  _createClass(ScrollLock, [{
    key: "_getScrollbarWidth",
    value: function _getScrollbarWidth() {
      return window.innerWidth - document.documentElement.clientWidth;
    }
  }, {
    key: "_getBodyScrollTop",
    value: function _getBodyScrollTop() {
      return self.pageYOffset || document.documentElement && document.documentElement.ScrollTop || document.body && document.body.scrollTop;
    }
  }, {
    key: "disableScrolling",
    value: function disableScrolling() {
      var _this = this;
      this._scrollTop = document.body.dataset.scroll = document.body.dataset.scroll ? document.body.dataset.scroll : this._getBodyScrollTop();
      if (this._getScrollbarWidth()) {
        document.body.style.paddingRight = "".concat(this._getScrollbarWidth(), "px");
        this._fixedBlockElements.forEach(function (block) {
          block.style.paddingRight = "".concat(_this._getScrollbarWidth(), "px");
        });
      }
      document.body.style.top = "-".concat(this._scrollTop, "px");
      document.body.classList.add(this._lockClass);
    }
  }, {
    key: "enableScrolling",
    value: function enableScrolling() {
      document.body.classList.remove(this._lockClass);
      window.scrollTo(0, +document.body.dataset.scroll);
      document.body.style.paddingRight = null;
      document.body.style.top = null;
      this._fixedBlockElements.forEach(function (block) {
        block.style.paddingRight = null;
      });
      document.body.removeAttribute('data-scroll');
      this._scrollTop = null;
    }
  }]);
  return ScrollLock;
}();
window.scrollLock = new ScrollLock();

/***/ })

/******/ });
//# sourceMappingURL=main.min.js.map